<html>

<head>
    <title>React App Demo</title>
    <link rel="stylesheet" type="text/css" href="css/style.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
        rel="stylesheet">
    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>

<body>

    <div id="root"></div>
    <script type="text/babel">

        // define other components
        const Albums = (props) => {
            return props.data.map(item => {
                return (
                    <div class="item">
                        <div onClick={props.clickHandler}>{item.title}</div>
                    </div>
                );
            });
        }

        const InputForm = (props) => {
            return (
                <div class="formContainer">
                    <form>
                        Title: <input type="text" name="title" value={props.item.title || ""} onChange={props.changeHandler}/><br/>
                        Author: <input type="text" name="artist" value={props.item.artist || ""} onChange={props.changeHandler} /><br />
                        Genre: <input type="text" name="genre" value={props.item.genre || ""} onChange={props.changeHandler} /><br />
                        Year: <input type="text" name="year" value={props.item.year || ""} onChange={props.changeHandler} /><br />
                    </form>
                    <button name="clear" onClick={props.clear} type="button">Clear</button>
                </div>
            )
        }

        const App = () => {
            const [items, setItems] = React.useState(<%- albums %>);
            const [currentItem, setCurrentItem] = React.useState({});

            const selectItem = (event) => {
                const item = items.find(item => {
                    return item.title === event.target.innerText;
                });
                setCurrentItem(item);
            }

            const clear = () => {
                setCurrentItem({});
            }

            const changeHandler = (event) => {
                const newItem = { ...currentItem };
                newItem[event.target.name] = event.target.value;
                setCurrentItem(newItem);
                items.find((item, index) => {
                    if (item._id === newItem._id) {
                        items[index] = newItem;
                        setItems(items);
                    }
                })
            }

            return (
                <div>
                    <Header/>
                    <InputForm
                        item={currentItem}
                        changeHandler={changeHandler}
                        clear={clear}
                    />
                    <hr/>
                    <div class="container">
                        <Albums data={items} clickHandler={selectItem}/>
                    </div>
                </div>
            );
        }

        const Header = () => {
            return <h1>Albums</h1>;
        }

        ReactDOM.render(<App/>, document.getElementById('root'));
    </script>
</body>

</html>